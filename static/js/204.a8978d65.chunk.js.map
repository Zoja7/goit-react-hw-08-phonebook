{"version":3,"file":"static/js/204.a8978d65.chunk.js","mappings":"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","sources":["assets/icons/trashSvg.svg","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filters/selectors.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTrashSvg(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 12h2v12h-2zm6 0h2v12h-2z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M4 6v2h2v20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8h2V6zm4 22V8h16v20zm4-26h8v2h-8z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrashSvg);\nexport default __webpack_public_path__ + \"static/media/trashSvg.1d4f88a3c40207c88531e2fce43a4e59.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"submitButton\":\"ContactForm_submitButton__8wEUJ\",\"inputWrapper\":\"ContactForm_inputWrapper__9zhfJ\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const selectContacts = state => state.contactsStore.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsStore.contacts.isLoading;\nexport const selectContactsError = state => state.contactsStore.contacts.error;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Loader from 'components/Loader/Loader';\n// import { selectContactsIsLoading } from 'redux/contacts/selectors';\nimport { addContactThunk } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  // const isLoadingFromRedux = useSelector(selectContactsIsLoading);\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const handleAddContact = data => {\n    const hasDuplicated = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === data.name.toLowerCase() ||\n        contact.number.toLowerCase() === data.number.toLowerCase()\n    );\n    if (hasDuplicated) {\n      alert(`'${data.name && data.number}' is already in contacts!`);\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      ...data,\n    };\n    setIsLoading(true);\n\n    dispatch(addContactThunk(newContact))\n      .then(() => {\n        setIsLoading(false);\n        setPhone('');\n        setName('');\n        alert('Contact added successfully!');\n      })\n      .catch(error => {\n        setIsLoading(false);\n        alert(`Error adding contact: ${error}`);\n      });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      name,\n      number,\n    };\n\n    if (\n      data.name.toLowerCase().trim() !== '' &&\n      data.number.toLowerCase().trim() !== ''\n    ) {\n      handleAddContact(data);\n    }\n  };\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'name': {\n        setName(value);\n        return;\n      }\n      case 'number': {\n        setPhone(value);\n        return;\n      }\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <form className={css.formContainer} onSubmit={handleSubmit}>\n        <label className={css.inputWrapper}>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            required\n            pattern=\"[a-zA-Zа-яА-ЯіІїЇґҐєЄ']+\"\n            value={name}\n            onChange={event => handleInputChange(event)}\n          />\n        </label>\n        <label className={css.inputWrapper}>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            required\n            pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n            title=\"Format: XXX-XXX-XX-XX\"\n            value={number}\n            onChange={event => handleInputChange(event)}\n          />\n        </label>\n        <button className={css.submitButton} type=\"submit\">\n          {isLoading ? <Loader /> : 'Add contact'}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"deleteButton\":\"ContactItem_deleteButton__AvFnv\",\"contactName\":\"ContactItem_contactName__ZAMAK\",\"contactNumber\":\"ContactItem_contactNumber__Xjnxb\",\"svgIcon\":\"ContactItem_svgIcon__T4txl\"};","// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport css from './ContactItem.module.css';\nimport { ReactComponent as IconTrash } from 'assets/icons/trashSvg.svg';\nimport { useDispatch } from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { deleteContactThunk } from 'redux/contacts/operations';\n// import { selectContactsIsLoading } from 'redux/contacts/selectors';\n\nexport default function ContactItem({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n  // const isLoadingFromRedux = useSelector(selectContactsIsLoading);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDeleteContact = id => {\n    setIsLoading(true);\n    dispatch(deleteContactThunk(id))\n      .then(() => {\n        setIsLoading(false);\n        alert('Contact deleted successfully!');\n      })\n      .catch(error => {\n        setIsLoading(false);\n        alert(`Error deleting contact: ${error}`);\n      });\n  };\n  return (\n    <li key={id} className={css.contactItem}>\n      <span className={css.contactName}>{name}</span>\n      <span className={css.contactNumber}> {number}</span>\n\n      <button\n        className={css.deleteButton}\n        type=\"button\"\n        onClick={() => {\n          handleDeleteContact(id);\n        }}\n      >\n        {isLoading ? <Loader /> : <IconTrash className={css.svgIcon} />}\n        {/* <IconTrash className={css.svgIcon} /> */}\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__n4ZkG\",\"contactListWrapper\":\"ContactList_contactListWrapper__0cTDT\"};","import ContactItem from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n// import { useEffect } from 'react';\n// import { fetchContactsThunk } from 'redux/contacts/operations';\n\nexport default function ContactsList() {\n  const filter = useSelector(state => state.filtersStore.filters);\n  const contacts = useSelector(selectContacts);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className={css.contactListWrapper}>\n      <ul className={css.contactList}>\n        {' '}\n        {filteredContacts.map(contact => {\n          return <ContactItem key={contact.id} contact={contact} />;\n        })}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_filterWrapper__ohvAm\"};","export const selectFilters = state => state.filtersStore.filters;\nexport const selectFiltersIsLoading = state => state.filtersStore.isLoading;\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from 'redux/filters/slice';\nimport { selectFilters } from 'redux/filters/selectors';\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilters);\n  const handleFilterChange = event => {\n    const value = event.target.value;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <label className={css.filterWrapper}>\n      <p>Filter contacts by name:</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => handleFilterChange(event)}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContactsThunk } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoadingFromRedux = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  // const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const showContacts =\n    !error && !isLoadingFromRedux && contacts && contacts.length > 0;\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk())\n      .then(() => {\n        alert('Contacts downloaded successfully!');\n      })\n      .catch(error => {\n        alert(`Error downloading contacts: ${error}`);\n      });\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Contacts Page</h1>\n      <ContactForm />\n      <Filter />\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      <div>{isLoadingFromRedux && 'Request in progress...'}</div>\n      {showContacts && <ContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_path","_path2","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","selectContacts","state","contactsStore","contacts","items","selectContactsIsLoading","isLoading","selectContactsError","error","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useState3","_useState4","name","setName","_useState5","_useState6","number","setPhone","handleInputChange","event","value","target","_jsx","_Fragment","children","_jsxs","className","css","onSubmit","preventDefault","data","toLowerCase","trim","some","contact","alert","concat","newContact","_objectSpread","addContactThunk","then","catch","handleAddContact","type","required","pattern","onChange","title","Loader","_excluded","_extends","Object","assign","i","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrashSvg","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","ref","fill","d","ForwardRef","ContactItem","onClick","deleteContactThunk","handleDeleteContact","IconTrash","ContactsList","filter","filtersStore","filters","filteredContacts","includes","map","selectFilters","Filter","setFilter","handleFilterChange","isLoadingFromRedux","showContacts","useEffect","fetchContactsThunk","ContactForm"],"sourceRoot":""}